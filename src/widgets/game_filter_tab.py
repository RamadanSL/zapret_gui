from PySide6.QtWidgets import (QWidget, QVBoxLayout, QHBoxLayout,
                              QPushButton, QLabel, QMessageBox, QGroupBox, QTextEdit, QComboBox, QSizePolicy)
from PySide6.QtCore import Qt, Signal, QTimer
import os
from pathlib import Path

from utils.process_manager import ProcessManager
from utils.file_manager import FileManager

class GameFilterTab(QWidget):
    """–í–∫–ª–∞–¥–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–≤—ã–º —Ñ–∏–ª—å—Ç—Ä–æ–º."""
    filter_changed = Signal()

    def __init__(self, file_manager, main_window=None, parent=None):
        super().__init__(parent)
        self.file_manager = file_manager
        self.main_window = main_window # –î–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è
        self.is_operation_in_progress = False
        
        # UI
        self.init_ui()
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
        self.start_btn.clicked.connect(lambda: self.toggle_game_filter(True))
        self.stop_btn.clicked.connect(lambda: self.toggle_game_filter(False))
        
        # –¢–∞–π–º–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
        self.status_timer = QTimer()
        self.status_timer.timeout.connect(self.update_status)
        self.status_timer.start(5000)  # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        self.update_status()
        
    def get_button_style(self, button_type="default"):
        """Get button style based on type"""
        base_style = """
            QPushButton {
                padding: 10px 15px;
                border: 2px solid #cccccc;
                border-radius: 6px;
                font-weight: bold;
                font-size: 10pt;
                min-width: 120px;
            }
            QPushButton:hover {
                border-color: #0078d4;
                background-color: #f0f8ff;
            }
            QPushButton:pressed {
                background-color: #e0e0e0;
            }
            QPushButton:disabled {
                background-color: #f5f5f5;
                color: #cccccc;
                border-color: #e0e0e0;
            }
        """
        
        color_styles = {
            "success": "QPushButton { background-color: #28a745; color: white; }",
            "danger": "QPushButton { background-color: #dc3545; color: white; }",
            "info": "QPushButton { background-color: #17a2b8; color: white; }",
            "warning": "QPushButton { background-color: #ffc107; color: #333333; }",
            "primary": "QPushButton { background-color: #6f42c1; color: white; }",
            "secondary": "QPushButton { background-color: #6c757d; color: white; }"
        }
        
        return base_style + color_styles.get(button_type, color_styles["secondary"])
    
    def get_group_style(self):
        """Get common group box style"""
        return """
            QGroupBox {
                font-weight: bold;
                margin-top: 10px;
                padding-top: 10px;
                border: 1px solid #cccccc;
                border-radius: 6px;
                background-color: #f8f9fa;
            }
            QGroupBox::title {
                subcontrol-origin: margin;
                subcontrol-position: top left;
                padding: 0 8px;
                background-color: #f8f9fa;
                color: #333333;
                font-weight: bold;
            }
        """
    
    def get_status_style(self, status_type):
        """Get status label style based on status type"""
        styles = {
            "enabled": """
                color: #28a745;
                font-weight: bold;
                padding: 8px;
                background-color: #d4edda;
                border: 1px solid #c3e6cb;
                border-radius: 4px;
            """,
            "disabled": """
                color: #dc3545;
                font-weight: bold;
                padding: 8px;
                background-color: #f8d7da;
                border: 1px solid #f5c6cb;
                border-radius: 4px;
            """,
            "unknown": """
                color: #6c757d;
                font-weight: bold;
                padding: 8px;
                background-color: #f8f9fa;
                border: 1px solid #dee2e6;
                border-radius: 4px;
            """
        }
        return styles.get(status_type, styles["unknown"])
        
    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–∫–ª–∞–¥–∫–∏."""
        layout = QVBoxLayout(self)
        layout.setContentsMargins(24, 24, 24, 24)
        layout.setSpacing(24)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel("üéÆ –ò–≥—Ä–æ–≤–æ–π —Ñ–∏–ª—å—Ç—Ä")
        title_label.setStyleSheet("font-size: 18px; font-weight: bold; margin-bottom: 10px; color: #333333;")
        title_label.setWordWrap(True)
        layout.addWidget(title_label)
        
        # –ì—Ä—É–ø–ø–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        group = QGroupBox("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–≤—ã–º —Ñ–∏–ª—å—Ç—Ä–æ–º")
        group.setStyleSheet(self.get_group_style())
        group_layout = QVBoxLayout(group)
        group_layout.setSpacing(16)
        
        # –°—Ç–∞—Ç—É—Å
        status_layout = QHBoxLayout()
        status_layout.setSpacing(12)
        self.status_label = QLabel("–°—Ç–∞—Ç—É—Å: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è...")
        self.status_label.setWordWrap(True)
        self.status_label.setMinimumHeight(36)
        self.status_label.setSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Fixed)
        self.status_label.setStyleSheet(self.get_status_style("unknown"))
        status_layout.addWidget(self.status_label)
        status_layout.addStretch()
        
        # –ö–Ω–æ–ø–∫–∏
        btn_layout = QHBoxLayout()
        btn_layout.setSpacing(12)
        self.start_btn = QPushButton("‚ñ∂ –í–∫–ª—é—á–∏—Ç—å")
        self.stop_btn = QPushButton("‚èπ –û—Ç–∫–ª—é—á–∏—Ç—å")
        
        for btn in [self.start_btn, self.stop_btn]:
            btn.setMinimumWidth(130)
            btn.setMinimumHeight(36)
            btn.setSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Fixed)
        
        self.start_btn.setStyleSheet(self.get_button_style("success"))
        self.stop_btn.setStyleSheet(self.get_button_style("danger"))
        
        btn_layout.addWidget(self.start_btn)
        btn_layout.addWidget(self.stop_btn)
        btn_layout.addStretch()
        
        group_layout.addLayout(status_layout)
        group_layout.addLayout(btn_layout)
        layout.addWidget(group)
        layout.addStretch()
        
        # –ì—Ä—É–ø–ø–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        info_group = QGroupBox("üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        info_group.setStyleSheet(self.get_group_style())
        info_layout = QVBoxLayout(info_group)
        info_layout.setSpacing(8)
        
        self.info_text = QTextEdit()
        self.info_text.setReadOnly(True)
        self.info_text.setMaximumHeight(200)
        self.info_text.setStyleSheet("""
            QTextEdit {
                background-color: #f8f9fa;
                color: #333333;
                border: 1px solid #dee2e6;
                border-radius: 4px;
                padding: 8px;
                font-size: 9pt;
                font-family: 'Segoe UI', sans-serif;
            }
        """)
        
        info_layout.addWidget(self.info_text)
        info_group.setLayout(info_layout)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π layout
        layout.addWidget(info_group)
        layout.addStretch()
        
    def set_operation_mode(self, in_progress=True):
        """Set operation mode to disable/enable buttons during operations"""
        self.is_operation_in_progress = in_progress
        self.start_btn.setEnabled(not in_progress)
        self.stop_btn.setEnabled(not in_progress)
        
    def update_status(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä–æ–≤–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞."""
        if self.is_operation_in_progress:
            return
            
        try:
            is_enabled = self.is_game_filter_enabled()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            if is_enabled:
                self.status_label.setText("–°—Ç–∞—Ç—É—Å: –í–∫–ª—é—á–µ–Ω")
                self.status_label.setStyleSheet(self.get_status_style("enabled"))
            else:
                self.status_label.setText("–°—Ç–∞—Ç—É—Å: –û—Ç–∫–ª—é—á–µ–Ω")
                self.status_label.setStyleSheet(self.get_status_style("disabled"))
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
            self.start_btn.setEnabled(not is_enabled and not self.is_operation_in_progress)
            self.stop_btn.setEnabled(is_enabled and not self.is_operation_in_progress)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            self.update_info_text(is_enabled)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä–æ–≤–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞: {e}")
            self.status_label.setText("–°—Ç–∞—Ç—É—Å: –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏")
            self.status_label.setStyleSheet(self.get_status_style("unknown"))
    
    def update_info_text(self, is_enabled):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç"""
        try:
            game_filter_file = self.file_manager.bin_dir / "game_filter.enabled"
            file_exists = game_filter_file.exists()
            file_size = game_filter_file.stat().st_size if file_exists else 0
            
            info_text = f"""üéÆ –ò–≥—Ä–æ–≤–æ–π —Ñ–∏–ª—å—Ç—Ä (Game Filter)

üìã –û–ø–∏—Å–∞–Ω–∏–µ:
Game Filter –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—Ö–æ–¥–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ –∏–≥—Ä–∞—Ö –∏ –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö, 
–∏—Å–ø–æ–ª—å–∑—É—é—â–∏—Ö UDP –Ω–∞ –ø–æ—Ä—Ç–∞—Ö –≤—ã—à–µ 1023.

üîß –ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã:
‚Ä¢ –ü—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ñ–∞–π–ª game_filter.enabled
‚Ä¢ –ü—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ —Ñ–∞–π–ª —É–¥–∞–ª—è–µ—Ç—Å—è
‚Ä¢ –§–∏–ª—å—Ç—Ä –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ –ø–æ—Ä—Ç–∞–º 1024-65535

üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {'–í–ö–õ–Æ–ß–ï–ù' if is_enabled else '–û–¢–ö–õ–Æ–ß–ï–ù'}
üìÅ –§–∞–π–ª: {'–°—É—â–µ—Å—Ç–≤—É–µ—Ç' if file_exists else '–ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'}
üìè –†–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç

‚ö†Ô∏è –í–∞–∂–Ω–æ:
–ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–ª—É–∂–±—ã –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.

üîÑ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: –ö–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥"""
            
            self.info_text.setText(info_text)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞: {e}")
            self.info_text.setText(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {str(e)}")
        
    def is_game_filter_enabled(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤–∫–ª—é—á–µ–Ω –ª–∏ Game Filter"""
        try:
            game_filter_file = self.file_manager.bin_dir / "game_filter.enabled"
            return game_filter_file.exists()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä–æ–≤–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞: {e}")
            return False
        
    def toggle_game_filter(self, enable: bool):
        """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç Game Filter —Å–æ–∑–¥–∞–Ω–∏–µ–º/—É–¥–∞–ª–µ–Ω–∏–µ–º —Ñ–∞–π–ª–∞."""
        if self.is_operation_in_progress:
            return
            
        try:
            self.set_operation_mode(True)
            
            game_filter_file = self.file_manager.bin_dir / "game_filter.enabled"
            current_status = self.is_game_filter_enabled()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ —á—Ç–æ-—Ç–æ –º–µ–Ω—è—Ç—å
            if enable == current_status:
                QMessageBox.information(
                    self,
                    "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                    f"–ò–≥—Ä–æ–≤–æ–π —Ñ–∏–ª—å—Ç—Ä —É–∂–µ {'–≤–∫–ª—é—á–µ–Ω' if enable else '–æ—Ç–∫–ª—é—á–µ–Ω'}."
                )
                self.set_operation_mode(False)
                return

            if enable:
                # –í–∫–ª—é—á–∞–µ–º —Ñ–∏–ª—å—Ç—Ä (—Å–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª)
                game_filter_file.touch()
                action_text = "–≤–∫–ª—é—á–µ–Ω"
            else:
                # –û—Ç–∫–ª—é—á–∞–µ–º —Ñ–∏–ª—å—Ç—Ä (—É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª)
                if game_filter_file.exists():
                    game_filter_file.unlink()
                action_text = "–æ—Ç–∫–ª—é—á–µ–Ω"

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            self.update_status()
            self.filter_changed.emit()

            QMessageBox.information(
                self,
                "–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω",
                f"–ò–≥—Ä–æ–≤–æ–π —Ñ–∏–ª—å—Ç—Ä –±—ã–ª {action_text}.\n\n"
                "–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–ª—É–∂–±—É."
            )
            
        except PermissionError:
            QMessageBox.critical(
                self,
                "–û—à–∏–±–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞",
                "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞.\n"
                "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
            )
        except Exception as e:
            QMessageBox.critical(
                self,
                "–û—à–∏–±–∫–∞",
                f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∏–≥—Ä–æ–≤–æ–π —Ñ–∏–ª—å—Ç—Ä:\n{str(e)}"
            )
        finally:
            self.set_operation_mode(False)
    
    def closeEvent(self, event):
        """Handle close event"""
        if self.status_timer:
            self.status_timer.stop()
        event.accept() 