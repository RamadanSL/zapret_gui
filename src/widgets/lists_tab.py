from PySide6.QtWidgets import (QWidget, QVBoxLayout, QHBoxLayout, QSplitter,
                              QPushButton, QLabel, QTextEdit, QComboBox,
                              QMessageBox, QFileDialog, QInputDialog,
                              QProgressBar, QListWidget, QListWidgetItem,
                              QGroupBox, QFormLayout, QTableWidget, QTableWidgetItem,
                              QHeaderView, QSizePolicy, QToolButton, QMenu,
                              QFrame, QScrollArea, QGridLayout)
from PySide6.QtCore import Qt, Signal, QThread, QObject, QTimer
from PySide6.QtGui import QTextOption, QFont, QIcon, QPixmap, QAction
import re
import os
import urllib.request
import urllib.error
from pathlib import Path
from typing import List, Optional
import requests

from utils.file_manager import FileManager
from utils.style_utils import StyleUtils

class StatCard(QFrame):
    """–ö–∞—Ä—Ç–æ—á–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."""
    
    def __init__(self, title, value, parent=None):
        super().__init__(parent)
        self.title = title
        self.value_label = None
        self.init_ui(title, value)
    
    def init_ui(self, title, value):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–∞—Ä—Ç–æ—á–∫–∏."""
        self.setStyleSheet("""
            QFrame {
                background-color: #2d2d2d;
                border: 1px solid #404040;
                border-radius: 8px;
                padding: 12px;
            }
        """)
        
        layout = QVBoxLayout(self)
        layout.setSpacing(8)
        
        title_label = QLabel(title)
        title_label.setStyleSheet(StyleUtils.get_label_style_material(color="#cccccc"))
        
        self.value_label = QLabel(value)
        self.value_label.setStyleSheet(f"""
            QLabel {{
                color: #8ab4f8;
                font-weight: bold;
                font-size: 16pt;
                font-family: 'Segoe UI', Arial, sans-serif;
            }}
        """)
        
        layout.addWidget(title_label)
        layout.addWidget(self.value_label)

class IpsetUpdateWorker(QObject):
    """–í–æ—Ä–∫–µ—Ä –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è ipset —Å–ø–∏—Å–∫–∞."""
    finished = Signal(str)
    progress = Signal(int)
    status = Signal(str)

    def __init__(self, url, save_path, parent=None):
        super().__init__(parent)
        self.url = url
        self.save_path = save_path

    def run(self):
        try:
            self.status.emit("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...")
            self.progress.emit(10)
            
            response = requests.get(self.url, timeout=30, stream=True)
            response.raise_for_status()
            
            self.status.emit("üì• –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")
            self.progress.emit(30)
            
            total_size = int(response.headers.get('content-length', 0))
            downloaded = 0
            
            with open(self.save_path, 'w', encoding='utf-8') as f:
                for chunk in response.iter_content(chunk_size=8192):
                    if chunk:
                        f.write(chunk.decode('utf-8', errors='ignore'))
                        downloaded += len(chunk)
                        if total_size > 0:
                            progress = 30 + int((downloaded / total_size) * 60)
                            self.progress.emit(progress)
            
            self.progress.emit(100)
            self.status.emit("‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
            self.finished.emit("success")
            
        except requests.RequestException as e:
            self.status.emit(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
            self.finished.emit(f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
        except IOError as e:
            self.status.emit(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
            self.finished.emit(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")

class ListsTab(QWidget):
    """–í–∫–ª–∞–¥–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞–º–∏ –¥–æ–º–µ–Ω–æ–≤ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º."""
    list_updated = Signal(str)

    def __init__(self, file_manager, main_window=None, parent=None):
        super().__init__(parent)
        self.file_manager = file_manager
        self.main_window = main_window
        self.is_operation_in_progress = False
        
        self.init_ui()
        self.connect_signals()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        self.current_file = None
        self.refresh_files()
        self.update_ipset_status()
        self.update_stats()
        
    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å."""
        main_layout = QVBoxLayout(self)
        main_layout.setContentsMargins(20, 20, 20, 20)
        main_layout.setSpacing(20)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel("üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞–º–∏ –¥–æ–º–µ–Ω–æ–≤")
        title_label.setStyleSheet(f"""
            QLabel {{
                font-size: 24px;
                font-weight: bold;
                color: #ffffff;
                margin-bottom: 10px;
                font-family: 'Segoe UI', Arial, sans-serif;
            }}
        """)
        main_layout.addWidget(title_label)
        
        # –°–æ–∑–¥–∞–µ–º —Å–ø–ª–∏—Ç—Ç–µ—Ä
        splitter = QSplitter(Qt.Orientation.Horizontal)
        
        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å
        left_panel = self.create_left_panel()
        splitter.addWidget(left_panel)
        
        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å
        right_panel = self.create_right_panel()
        splitter.addWidget(right_panel)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤
        splitter.setSizes([400, 600])
        main_layout.addWidget(splitter)

    def create_left_panel(self):
        """–°–æ–∑–¥–∞–µ—Ç –ª–µ–≤—É—é –ø–∞–Ω–µ–ª—å —Å —Ñ–∞–π–ª–∞–º–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏."""
        panel = QFrame()
        panel.setStyleSheet("""
            QFrame {
                background-color: #2d2d2d;
                border: 1px solid #404040;
                border-radius: 8px;
                padding: 10px;
            }
        """)
        
        layout = QVBoxLayout(panel)
        layout.setContentsMargins(15, 15, 15, 15)
        layout.setSpacing(20)
        
        # –ì—Ä—É–ø–ø–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞–º–∏
        files_group = QGroupBox("üìÅ –§–∞–π–ª—ã —Å–ø–∏—Å–∫–æ–≤")
        files_group.setStyleSheet(StyleUtils.get_group_style())
        files_layout = QVBoxLayout(files_group)
        files_layout.setSpacing(12)
        
        # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        self.files_list = QListWidget()
        self.files_list.setMinimumHeight(200)
        self.files_list.setStyleSheet("""
            QListWidget {
                background-color: #1e1e1e;
                border: 1px solid #404040;
                border-radius: 6px;
                padding: 8px;
                font-size: 11pt;
                color: #ffffff;
            }
            QListWidget::item {
                padding: 8px;
                border-radius: 4px;
                margin: 2px;
            }
            QListWidget::item:hover {
                background-color: #2d2d2d;
            }
            QListWidget::item:selected {
                background-color: #0078d4;
                color: #ffffff;
            }
        """)
        files_layout.addWidget(self.files_list)
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞–º–∏
        files_btn_layout = QHBoxLayout()
        files_btn_layout.setSpacing(10)
        
        # –°–æ–∑–¥–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é –¥–ª—è —Ñ–∞–π–ª–æ–≤
        self.files_menu_btn = QToolButton()
        self.files_menu_btn.setText("üìÅ –î–µ–π—Å—Ç–≤–∏—è —Å —Ñ–∞–π–ª–∞–º–∏")
        self.files_menu_btn.setPopupMode(QToolButton.ToolButtonPopupMode.InstantPopup)
        self.files_menu_btn.setStyleSheet(StyleUtils.get_button_style_material("info"))
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é —Ñ–∞–π–ª–æ–≤
        self.files_menu = QMenu()
        self.files_menu.setStyleSheet("""
            QMenu {
                background-color: #2d2d2d;
                border: 1px solid #404040;
                border-radius: 6px;
                padding: 5px;
                color: #ffffff;
            }
            QMenu::item {
                padding: 10px 20px;
                border-radius: 4px;
                margin: 2px;
            }
            QMenu::item:selected {
                background-color: #0078d4;
                color: #ffffff;
            }
        """)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è –≤ –º–µ–Ω—é
        file_actions = [
            ("üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫", self.refresh_files),
            ("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª", self.add_file),
            ("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª", self.delete_file),
        ]
        
        for text, action in file_actions:
            menu_action = QAction(text, self)
            menu_action.triggered.connect(action)
            self.files_menu.addAction(menu_action)
        
        self.files_menu_btn.setMenu(self.files_menu)
        files_btn_layout.addWidget(self.files_menu_btn)
        files_btn_layout.addStretch()
        
        files_layout.addLayout(files_btn_layout)
        
        # –ì—Ä—É–ø–ø–∞ Ipset
        ipset_group = QGroupBox("üåê –†–µ–∂–∏–º Ipset")
        ipset_group.setStyleSheet(StyleUtils.get_group_style())
        ipset_layout = QVBoxLayout(ipset_group)
        ipset_layout.setSpacing(12)
        
        # –°—Ç–∞—Ç—É—Å Ipset
        self.ipset_status_label = QLabel("–°—Ç–∞—Ç—É—Å: –í—ã–∫–ª—é—á–µ–Ω")
        self.ipset_status_label.setStyleSheet("""
            QLabel {
                font-size: 12pt;
                font-weight: bold;
                color: #cccccc;
                padding: 8px;
                background-color: #3c3c3c;
                border-radius: 6px;
                border: 1px solid #505050;
                font-family: 'Segoe UI', Arial, sans-serif;
            }
        """)
        ipset_layout.addWidget(self.ipset_status_label)
        
        # –ö–Ω–æ–ø–∫–∏ Ipset
        ipset_btn_layout = QHBoxLayout()
        ipset_btn_layout.setSpacing(10)
        
        self.ipset_toggle_btn = QPushButton("–í–∫–ª—é—á–∏—Ç—å")
        self.ipset_toggle_btn.setStyleSheet(StyleUtils.get_button_style_material("primary"))
        self.ipset_toggle_btn.setMinimumHeight(40)
        
        self.ipset_update_btn = QPushButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å")
        self.ipset_update_btn.setStyleSheet(StyleUtils.get_button_style_material("secondary"))
        self.ipset_update_btn.setMinimumHeight(40)
        
        ipset_btn_layout.addWidget(self.ipset_toggle_btn)
        ipset_btn_layout.addWidget(self.ipset_update_btn)
        ipset_layout.addLayout(ipset_btn_layout)
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        self.ipset_progress = QProgressBar()
        self.ipset_progress.setVisible(False)
        self.ipset_progress.setStyleSheet(StyleUtils.get_progress_bar_style())
        self.ipset_progress.setMinimumHeight(8)
        ipset_layout.addWidget(self.ipset_progress)
        
        # –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        self.ipset_status_text = QLabel("")
        self.ipset_status_text.setStyleSheet(StyleUtils.get_label_style_material(color="#cccccc"))
        self.ipset_status_text.setVisible(False)
        ipset_layout.addWidget(self.ipset_status_text)
        
        # –ì—Ä—É–ø–ø–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        stats_group = QGroupBox("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        stats_group.setStyleSheet(StyleUtils.get_group_style())
        stats_layout = QGridLayout(stats_group)
        stats_layout.setVerticalSpacing(12)
        stats_layout.setHorizontalSpacing(15)
        
        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        self.file_count_card = StatCard("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤", "0")
        self.total_size_card = StatCard("–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä", "0 –ú–ë")
        self.domain_count_card = StatCard("–í—Å–µ–≥–æ –¥–æ–º–µ–Ω–æ–≤", "0")
        
        stats_layout.addWidget(self.file_count_card, 0, 0)
        stats_layout.addWidget(self.total_size_card, 0, 1)
        stats_layout.addWidget(self.domain_count_card, 1, 0, 1, 2)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –≥—Ä—É–ø–ø—ã –≤ layout
        layout.addWidget(files_group)
        layout.addWidget(ipset_group)
        layout.addWidget(stats_group)
        layout.addStretch()
        
        return panel

    def create_right_panel(self):
        """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∞–≤—É—é –ø–∞–Ω–µ–ª—å —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º —Ñ–∞–π–ª–∞."""
        panel = QFrame()
        panel.setStyleSheet("""
            QFrame {
                background-color: #2d2d2d;
                border: 1px solid #404040;
                border-radius: 8px;
            }
        """)
        
        layout = QVBoxLayout(panel)
        layout.setContentsMargins(15, 15, 15, 15)
        layout.setSpacing(15)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–±–ª–∞—Å—Ç–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        content_header = QLabel("üìù –†–µ–¥–∞–∫—Ç–æ—Ä —Ñ–∞–π–ª–∞")
        content_header.setStyleSheet(f"""
            QLabel {{
                font-size: 16px;
                font-weight: bold;
                color: #ffffff;
                padding: 5px 0;
                font-family: 'Segoe UI', Arial, sans-serif;
            }}
        """)
        layout.addWidget(content_header)
        
        # –û–±–ª–∞—Å—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        self.content_text = QTextEdit()
        self.content_text.setStyleSheet(StyleUtils.get_text_edit_style())
        self.content_text.setWordWrapMode(QTextOption.WrapMode.WrapAnywhere)
        layout.addWidget(self.content_text)
        
        # –ö–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        edit_btn_layout = QHBoxLayout()
        edit_btn_layout.setSpacing(10)
        
        self.save_btn = QPushButton("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
        self.save_btn.setStyleSheet(StyleUtils.get_button_style_material("success"))
        self.save_btn.setMinimumHeight(40)
        self.save_btn.setEnabled(False)
        
        self.clear_btn = QPushButton("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å")
        self.clear_btn.setStyleSheet(StyleUtils.get_button_style("warning"))
        self.clear_btn.setMinimumHeight(40)
        
        edit_btn_layout.addStretch()
        edit_btn_layout.addWidget(self.clear_btn)
        edit_btn_layout.addWidget(self.save_btn)
        
        layout.addLayout(edit_btn_layout)
        
        return panel

    def connect_signals(self):
        """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç —Å–∏–≥–Ω–∞–ª—ã –∫ —Å–ª–æ—Ç–∞–º."""
        self.files_list.currentItemChanged.connect(self.display_file_content)
        self.save_btn.clicked.connect(self.save_file)
        self.clear_btn.clicked.connect(self.clear_content)
        self.ipset_toggle_btn.clicked.connect(self.toggle_ipset_mode)
        self.ipset_update_btn.clicked.connect(self.update_ipset_list)
        self.content_text.textChanged.connect(self.on_content_changed)

    def on_content_changed(self):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ."""
        self.save_btn.setEnabled(True)

    def clear_content(self):
        """–û—á–∏—â–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞."""
        reply = QMessageBox.question(
            self, 
            "üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ", 
            "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞?",
            QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No,
            QMessageBox.StandardButton.No
        )
        
        if reply == QMessageBox.StandardButton.Yes:
            self.content_text.clear()
            self.save_btn.setEnabled(False)

    def set_operation_mode(self, in_progress=True):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–µ–∂–∏–º –æ–ø–µ—Ä–∞—Ü–∏–∏."""
        self.is_operation_in_progress = in_progress
        self.files_menu_btn.setEnabled(not in_progress)
        self.ipset_toggle_btn.setEnabled(not in_progress)
        self.ipset_update_btn.setEnabled(not in_progress)

    def refresh_files(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤."""
        self.files_list.clear()
        try:
            files = [f for f in os.listdir(self.file_manager.lists_dir) if f.endswith('.txt')]
            self.files_list.addItems(files)
        except FileNotFoundError:
            QMessageBox.warning(self, "‚ö†Ô∏è –û—à–∏–±–∫–∞", "–ü–∞–ø–∫–∞ —Å–æ —Å–ø–∏—Å–∫–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

    def display_file_content(self, current, previous):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞."""
        if current:
            file_path = self.file_manager.lists_dir / current.text()
            try:
                with open(file_path, 'r', encoding='utf-8') as f:
                    self.content_text.setPlainText(f.read())
                self.content_text.setReadOnly(False)
                self.save_btn.setEnabled(False)
                self.current_file = current.text()
            except Exception as e:
                self.content_text.setPlainText(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª: {e}")
                self.content_text.setReadOnly(True)
                self.current_file = None

    def add_file(self):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª —Å–ø–∏—Å–∫–∞."""
        file_path, _ = QFileDialog.getSaveFileName(
            self, 
            "‚ûï –ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫", 
            str(self.file_manager.lists_dir), 
            "Text Files (*.txt)"
        )
        if file_path:
            try:
                with open(file_path, 'w') as f:
                    pass
                self.refresh_files()
                QMessageBox.information(self, "‚úÖ –£—Å–ø–µ—Ö", "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.")
            except Exception as e:
                QMessageBox.critical(self, "‚ùå –û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª: {e}")

    def delete_file(self):
        """–£–¥–∞–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª."""
        current_item = self.files_list.currentItem()
        if not current_item:
            QMessageBox.warning(self, "‚ö†Ô∏è –û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
            return

        reply = QMessageBox.question(
            self, 
            "üóëÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", 
            f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª '{current_item.text()}'?",
            QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No,
            QMessageBox.StandardButton.No
        )
        
        if reply == QMessageBox.StandardButton.Yes:
            try:
                os.remove(self.file_manager.lists_dir / current_item.text())
                self.refresh_files()
                self.content_text.clear()
                QMessageBox.information(self, "‚úÖ –£—Å–ø–µ—Ö", "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")
            except Exception as e:
                QMessageBox.critical(self, "‚ùå –û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª: {e}")

    def save_file(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–µ."""
        current_item = self.files_list.currentItem()
        if not current_item:
            return
        
        file_path = self.file_manager.lists_dir / current_item.text()
        try:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(self.content_text.toPlainText())
            self.save_btn.setEnabled(False)
            self.list_updated.emit(current_item.text())
            self.update_stats()
            QMessageBox.information(self, "‚úÖ –£—Å–ø–µ—Ö", "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω.")
        except Exception as e:
            QMessageBox.critical(self, "‚ùå –û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª: {e}")

    def update_ipset_status(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Ä–µ–∂–∏–º–∞ Ipset."""
        is_enabled = (self.file_manager.lists_dir / "ipset-all.txt").exists()
        
        if is_enabled:
            self.ipset_status_label.setText("–°—Ç–∞—Ç—É—Å: –í–∫–ª—é—á–µ–Ω")
            self.ipset_status_label.setStyleSheet("""
                QLabel {
                    font-size: 12pt;
                    font-weight: bold;
                    color: #81c995;
                    padding: 8px;
                    background-color: rgba(129, 201, 149, 0.1);
                    border-radius: 6px;
                    border: 1px solid #81c995;
                    font-family: 'Segoe UI', Arial, sans-serif;
                }
            """)
            self.ipset_toggle_btn.setText("–í—ã–∫–ª—é—á–∏—Ç—å")
            self.ipset_toggle_btn.setStyleSheet(StyleUtils.get_button_style_material("danger"))
        else:
            self.ipset_status_label.setText("–°—Ç–∞—Ç—É—Å: –í—ã–∫–ª—é—á–µ–Ω")
            self.ipset_status_label.setStyleSheet("""
                QLabel {
                    font-size: 12pt;
                    font-weight: bold;
                    color: #cccccc;
                    padding: 8px;
                    background-color: #3c3c3c;
                    border-radius: 6px;
                    border: 1px solid #505050;
                    font-family: 'Segoe UI', Arial, sans-serif;
                }
            """)
            self.ipset_toggle_btn.setText("–í–∫–ª—é—á–∏—Ç—å")
            self.ipset_toggle_btn.setStyleSheet(StyleUtils.get_button_style_material("primary"))

    def toggle_ipset_mode(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º Ipset."""
        ipset_file = self.file_manager.lists_dir / "ipset-all.txt"
        if ipset_file.exists():
            os.remove(ipset_file)
            QMessageBox.information(self, "‚úÖ –£—Å–ø–µ—Ö", "–†–µ–∂–∏–º Ipset –≤—ã–∫–ª—é—á–µ–Ω.")
        else:
            # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª, —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º
            ipset_file.touch()
            self.update_ipset_list() # –°—Ä–∞–∑—É –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ –≤–∫–ª—é—á–µ–Ω–∏—è
            QMessageBox.information(self, "‚úÖ –£—Å–ø–µ—Ö", "–†–µ–∂–∏–º Ipset –≤–∫–ª—é—á–µ–Ω.")
        self.update_ipset_status()

    def update_ipset_list(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ ipset-all.txt."""
        if self.is_operation_in_progress:
            return
            
        self.set_operation_mode(True)
        self.ipset_update_btn.setEnabled(False)
        self.ipset_update_btn.setText("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ...")
        self.ipset_progress.setVisible(True)
        self.ipset_status_text.setVisible(True)

        self.ipset_worker_thread = QThread()
        self.ipset_worker = IpsetUpdateWorker(
            url="https://raw.githubusercontent.com/zapret-info/z-i/master/ipset-all.txt",
            save_path=self.file_manager.lists_dir / "ipset-all.txt"
        )
        self.ipset_worker.moveToThread(self.ipset_worker_thread)

        if self.main_window:
            self.main_window.register_thread(self.ipset_worker_thread)

        self.ipset_worker.finished.connect(self.on_ipset_update_finished)
        self.ipset_worker.progress.connect(self.ipset_progress.setValue)
        self.ipset_worker.status.connect(self.ipset_status_text.setText)
        self.ipset_worker_thread.started.connect(self.ipset_worker.run)
        self.ipset_worker_thread.finished.connect(self.ipset_worker_thread.deleteLater)
        self.ipset_worker.finished.connect(self.ipset_worker.deleteLater)
        self.ipset_worker_thread.finished.connect(lambda: self.set_operation_mode(False))
        self.ipset_worker_thread.start()

    def on_ipset_update_finished(self, status):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ipset."""
        self.ipset_progress.setVisible(False)
        self.ipset_status_text.setVisible(False)
        
        if status == "success":
            QMessageBox.information(self, "‚úÖ –£—Å–ø–µ—Ö", "–°–ø–∏—Å–æ–∫ Ipset —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.")
        else:
            QMessageBox.warning(self, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", status)
            
        self.ipset_update_btn.setEnabled(True)
        self.ipset_update_btn.setText("üîÑ –û–±–Ω–æ–≤–∏—Ç—å")
        self.update_stats()

    def update_stats(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ñ–∞–π–ª–∞–º."""
        if not hasattr(self, 'file_count_card') or not hasattr(self, 'total_size_card') or not hasattr(self, 'domain_count_card'):
            return

        try:
            total_size = 0
            total_domains = 0
            
            list_files = [f for f in os.listdir(self.file_manager.lists_dir) if f.endswith('.txt')]
            
            for filename in list_files:
                filepath = self.file_manager.lists_dir / filename
                total_size += os.path.getsize(filepath)
                
                with open(filepath, 'r', encoding='utf-8', errors='ignore') as f:
                    total_domains += len(f.readlines())
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            self.file_count_card.value_label.setText(str(len(list_files)))
            self.total_size_card.value_label.setText(f"{total_size / (1024*1024):.2f} –ú–ë")
            self.domain_count_card.value_label.setText(str(total_domains))
            
        except Exception as e:
            self.file_count_card.value_label.setText("–û—à–∏–±–∫–∞")
            self.total_size_card.value_label.setText("–û—à–∏–±–∫–∞")
            self.domain_count_card.value_label.setText("–û—à–∏–±–∫–∞")
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

    def stop_threads(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–æ–Ω–æ–≤—ã–µ –ø–æ—Ç–æ–∫–∏."""
        if hasattr(self, 'ipset_worker_thread') and self.ipset_worker_thread.isRunning():
            self.ipset_worker_thread.quit()
            self.ipset_worker_thread.wait(2000) 