from PySide6.QtWidgets import (QWidget, QVBoxLayout, QHBoxLayout, 
                              QPushButton, QLabel, QCheckBox, QComboBox,
                              QFileDialog, QMessageBox, QGroupBox, QFormLayout,
                              QToolButton, QMenu, QFrame, QGridLayout,
                              QScrollArea, QSplitter)
from PySide6.QtCore import Qt, Signal, QThread
from PySide6.QtGui import QFont, QIcon, QAction
import os
from pathlib import Path
import winreg

from utils.file_manager import FileManager
from utils.process_manager import ProcessManager
from utils.config_manager import ConfigManager
from utils.update_checker import UpdateChecker
from utils.style_utils import StyleUtils

class SettingsTab(QWidget):
    """–í–∫–ª–∞–¥–∫–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º."""
    settings_changed = Signal()

    def __init__(self, file_manager, process_manager, config_manager, main_window=None, parent=None):
        super().__init__(parent)
        self.file_manager = file_manager
        self.process_manager = process_manager
        self.config_manager = config_manager
        self.main_window = main_window
        
        self.init_ui()
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
        self.auto_update_checkbox.stateChanged.connect(self.on_settings_changed)
        self.startup_checkbox.stateChanged.connect(self.on_settings_changed)
        self.minimize_checkbox.stateChanged.connect(self.on_settings_changed)
        self.theme_combo.currentIndexChanged.connect(self.on_settings_changed)
        self.theme_combo.currentIndexChanged.connect(self.settings_changed)
        
        self.check_update_btn.clicked.connect(self.check_updates)
        self.save_btn.clicked.connect(self.save_settings)
        self.reset_btn.clicked.connect(self.load_settings)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        self.load_settings()
        
    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–∫–ª–∞–¥–∫–∏."""
        main_layout = QVBoxLayout(self)
        main_layout.setContentsMargins(20, 20, 20, 20)
        main_layout.setSpacing(20)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        title_label.setStyleSheet("""
            QLabel {
                font-size: 24px;
                font-weight: bold;
                color: #1c1b1f;
                margin-bottom: 10px;
            }
        """)
        main_layout.addWidget(title_label)
        
        # –°–æ–∑–¥–∞–µ–º —Å–ø–ª–∏—Ç—Ç–µ—Ä –¥–ª—è –ª—É—á—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
        splitter = QSplitter(Qt.Orientation.Horizontal)
        
        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        left_panel = self.create_left_panel()
        splitter.addWidget(left_panel)
        
        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
        right_panel = self.create_right_panel()
        splitter.addWidget(right_panel)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤
        splitter.setSizes([600, 300])
        main_layout.addWidget(splitter)

    def create_left_panel(self):
        """–°–æ–∑–¥–∞–µ—Ç –ª–µ–≤—É—é –ø–∞–Ω–µ–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏."""
        panel = QFrame()
        panel.setStyleSheet("""
            QFrame {
                background-color: #f8f9fa;
                border: 1px solid #e1e1e1;
                border-radius: 8px;
                padding: 10px;
            }
        """)
        
        layout = QVBoxLayout(panel)
        layout.setContentsMargins(15, 15, 15, 15)
        layout.setSpacing(20)
        
        # –ì—Ä—É–ø–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–µ–º—ã
        theme_group = QGroupBox("üé® –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º—ã")
        theme_group.setStyleSheet(StyleUtils.get_group_style())
        theme_layout = QGridLayout(theme_group)
        theme_layout.setVerticalSpacing(12)
        theme_layout.setHorizontalSpacing(15)
        
        theme_label = QLabel("–¢–µ–º–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:")
        theme_label.setStyleSheet("""
            QLabel {
                font-size: 11pt;
                font-weight: bold;
                color: #333333;
            }
        """)
        
        self.theme_combo = QComboBox()
        self.theme_combo.addItems(["–¢–µ–º–Ω–∞—è", "–°–≤–µ—Ç–ª–∞—è", "Material Dark", "Material Light"])
        self.theme_combo.setStyleSheet("""
            QComboBox {
                background-color: white;
                border: 1px solid #dee2e6;
                border-radius: 6px;
                padding: 8px 12px;
                font-size: 11pt;
                min-height: 35px;
            }
            QComboBox::drop-down {
                border: none;
                width: 20px;
            }
            QComboBox::down-arrow {
                image: none;
                border-left: 5px solid transparent;
                border-right: 5px solid transparent;
                border-top: 5px solid #666666;
                margin-right: 10px;
            }
        """)
        
        theme_layout.addWidget(theme_label, 0, 0)
        theme_layout.addWidget(self.theme_combo, 0, 1)
        
        # –ì—Ä—É–ø–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        update_group = QGroupBox("üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
        update_group.setStyleSheet(StyleUtils.get_group_style())
        update_layout = QVBoxLayout(update_group)
        update_layout.setSpacing(15)
        
        self.auto_update_checkbox = QCheckBox("–ü—Ä–æ–≤–µ—Ä—è—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ")
        self.auto_update_checkbox.setStyleSheet("""
            QCheckBox {
                font-size: 11pt;
                color: #333333;
                spacing: 8px;
            }
            QCheckBox::indicator {
                width: 18px;
                height: 18px;
                border: 2px solid #dee2e6;
                border-radius: 4px;
                background-color: white;
            }
            QCheckBox::indicator:checked {
                background-color: #1976d2;
                border-color: #1976d2;
            }
        """)
        
        self.check_update_btn = QPushButton("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        self.check_update_btn.setStyleSheet(StyleUtils.get_button_style("secondary"))
        self.check_update_btn.setMinimumHeight(40)
        self.check_update_btn.setFont(QFont("Segoe UI", 10, QFont.Weight.Medium))
        
        update_layout.addWidget(self.auto_update_checkbox)
        update_layout.addWidget(self.check_update_btn)
        
        # –ì—Ä—É–ø–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        app_group = QGroupBox("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        app_group.setStyleSheet(StyleUtils.get_group_style())
        app_layout = QVBoxLayout(app_group)
        app_layout.setSpacing(15)
        
        self.startup_checkbox = QCheckBox("–ó–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Windows")
        self.startup_checkbox.setStyleSheet("""
            QCheckBox {
                font-size: 11pt;
                color: #333333;
                spacing: 8px;
            }
            QCheckBox::indicator {
                width: 18px;
                height: 18px;
                border: 2px solid #dee2e6;
                border-radius: 4px;
                background-color: white;
            }
            QCheckBox::indicator:checked {
                background-color: #1976d2;
                border-color: #1976d2;
            }
        """)
        
        self.minimize_checkbox = QCheckBox("–°–≤–æ—Ä–∞—á–∏–≤–∞—Ç—å –≤ —Ç—Ä–µ–π –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏")
        self.minimize_checkbox.setStyleSheet("""
            QCheckBox {
                font-size: 11pt;
                color: #333333;
                spacing: 8px;
            }
            QCheckBox::indicator {
                width: 18px;
                height: 18px;
                border: 2px solid #dee2e6;
                border-radius: 4px;
                background-color: white;
            }
            QCheckBox::indicator:checked {
                background-color: #1976d2;
                border-color: #1976d2;
            }
        """)
        
        app_layout.addWidget(self.startup_checkbox)
        app_layout.addWidget(self.minimize_checkbox)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –≥—Ä—É–ø–ø—ã
        layout.addWidget(theme_group)
        layout.addWidget(update_group)
        layout.addWidget(app_group)
        layout.addStretch()
        
        return panel

    def create_right_panel(self):
        """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∞–≤—É—é –ø–∞–Ω–µ–ª—å —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏."""
        panel = QFrame()
        panel.setStyleSheet("""
            QFrame {
                background-color: white;
                border: 1px solid #e1e1e1;
                border-radius: 8px;
            }
        """)
        
        layout = QVBoxLayout(panel)
        layout.setContentsMargins(15, 15, 15, 15)
        layout.setSpacing(20)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
        actions_header = QLabel("üéÆ –î–µ–π—Å—Ç–≤–∏—è")
        actions_header.setStyleSheet("""
            QLabel {
                font-size: 16px;
                font-weight: bold;
                color: #1c1b1f;
                padding: 5px 0;
            }
        """)
        layout.addWidget(actions_header)
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.save_btn = QPushButton("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        self.save_btn.setStyleSheet(StyleUtils.get_button_style("success"))
        self.save_btn.setMinimumHeight(45)
        self.save_btn.setFont(QFont("Segoe UI", 11, QFont.Weight.Bold))
        self.save_btn.setEnabled(False)
        
        self.reset_btn = QPushButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        self.reset_btn.setStyleSheet(StyleUtils.get_button_style("warning"))
        self.reset_btn.setMinimumHeight(45)
        self.reset_btn.setFont(QFont("Segoe UI", 11, QFont.Weight.Bold))
        
        # –°–æ–∑–¥–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
        self.actions_menu_btn = QToolButton()
        self.actions_menu_btn.setText("üìã –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è")
        self.actions_menu_btn.setPopupMode(QToolButton.ToolButtonPopupMode.InstantPopup)
        self.actions_menu_btn.setStyleSheet("""
            QToolButton {
                background-color: #1976d2;
                color: white;
                border: none;
                border-radius: 6px;
                padding: 10px 16px;
                font-weight: bold;
                font-size: 10pt;
                min-height: 40px;
            }
            QToolButton:hover {
                background-color: #1565c0;
            }
            QToolButton:pressed {
                background-color: #0d47a1;
            }
        """)
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π
        self.actions_menu = QMenu()
        self.actions_menu.setStyleSheet("""
            QMenu {
                background-color: white;
                border: 1px solid #e1e1e1;
                border-radius: 6px;
                padding: 5px;
            }
            QMenu::item {
                padding: 10px 20px;
                border-radius: 4px;
                margin: 2px;
            }
            QMenu::item:selected {
                background-color: #e3f2fd;
                color: #1976d2;
            }
        """)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è –≤ –º–µ–Ω—é
        actions = [
            ("üì§ –≠–∫—Å–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫", self.export_settings),
            ("üì• –ò–º–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫", self.import_settings),
            ("üîß –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", self.reset_all_settings)
        ]
        
        for text, action in actions:
            menu_action = QAction(text, self)
            menu_action.triggered.connect(action)
            self.actions_menu.addAction(menu_action)
        
        self.actions_menu_btn.setMenu(self.actions_menu)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å
        info_group = QGroupBox("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        info_group.setStyleSheet(StyleUtils.get_group_style())
        info_layout = QVBoxLayout(info_group)
        info_layout.setSpacing(10)
        
        info_text = QLabel("""
        <b>üí° –ü–æ–¥—Å–∫–∞–∑–∫–∏:</b><br>
        ‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è —Å—Ä–∞–∑—É<br>
        ‚Ä¢ –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞<br>
        ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏<br>
        ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–∫—Å–ø–æ—Ä—Ç –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
        """)
        info_text.setStyleSheet("""
            QLabel {
                font-size: 10pt;
                color: #666666;
                line-height: 1.4;
            }
        """)
        info_text.setWordWrap(True)
        info_layout.addWidget(info_text)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        layout.addWidget(self.save_btn)
        layout.addWidget(self.reset_btn)
        layout.addWidget(self.actions_menu_btn)
        layout.addWidget(info_group)
        layout.addStretch()
        
        return panel
        
    def load_settings(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        # –¢–µ–º–∞
        theme = self.config_manager.get("general", "theme", "–¢–µ–º–Ω–∞—è")
        self.theme_combo.setCurrentText(theme)
        
        # –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫
        autostart = self.config_manager.get("service", "autostart", False)
        self.startup_checkbox.setChecked(autostart)
        
        # –ó–∞–ø—É—Å–∫ —Å–≤—ë—Ä–Ω—É—Ç—ã–º
        start_minimized = self.config_manager.get("general", "start_minimized", False)
        self.minimize_checkbox.setChecked(start_minimized)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        auto_update = self.config_manager.get("updates", "auto_update", False)
        self.auto_update_checkbox.setChecked(auto_update)
        
        # –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        self.save_btn.setEnabled(False)
        
    def save_settings(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        try:
            # –¢–µ–º–∞
            theme = self.theme_combo.currentText()
            self.config_manager.set("general", "theme", theme)
            
            # –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫
            self.config_manager.set("service", "autostart", self.startup_checkbox.isChecked())
            
            # –ó–∞–ø—É—Å–∫ —Å–≤—ë—Ä–Ω—É—Ç—ã–º
            self.config_manager.set("general", "start_minimized", self.minimize_checkbox.isChecked())
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
            self.config_manager.set("updates", "auto_update", self.auto_update_checkbox.isChecked())
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –≤ —Ä–µ–µ—Å—Ç—Ä–µ
            try:
                key = winreg.OpenKey(
                    winreg.HKEY_CURRENT_USER,
                    r"Software\Microsoft\Windows\CurrentVersion\Run",
                    0,
                    winreg.KEY_SET_VALUE | winreg.KEY_QUERY_VALUE
                )
                
                if self.startup_checkbox.isChecked():
                    service_path = str(self.file_manager.base_dir / "service.bat")
                    winreg.SetValueEx(
                        key,
                        "ZapretService",
                        0,
                        winreg.REG_SZ,
                        f'"{service_path}"'
                    )
                else:
                    try:
                        winreg.DeleteValue(key, "ZapretService")
                    except FileNotFoundError:
                        pass  # –ó–Ω–∞—á–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ
                        
                winreg.CloseKey(key)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞: {e}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            self.config_manager.save_config()
            
            # –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            self.save_btn.setEnabled(False)
            
            QMessageBox.information(self, "‚úÖ –£—Å–ø–µ—Ö", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
            
        except Exception as e:
            QMessageBox.critical(self, "‚ùå –û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {e}")
            
    def reset_all_settings(self):
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."""
        reply = QMessageBox.question(
            self, 
            "üîÑ –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫", 
            "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é?",
            QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No,
            QMessageBox.StandardButton.No
        )
        
        if reply == QMessageBox.StandardButton.Yes:
            try:
                # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                self.config_manager.reset_to_defaults()
                self.load_settings()
                self.settings_changed.emit()
                QMessageBox.information(self, "‚úÖ –£—Å–ø–µ—Ö", "–í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
            except Exception as e:
                QMessageBox.critical(self, "‚ùå –û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {e}")
        
    def on_settings_changed(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        self.save_btn.setEnabled(True)
        
    def check_updates(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π."""
        self.check_update_btn.setEnabled(False)
        self.check_update_btn.setText("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞...")

        self.update_thread = QThread()
        if self.main_window:
            self.main_window.register_thread(self.update_thread)
        self.update_checker = UpdateChecker()
        self.update_checker.moveToThread(self.update_thread)

        self.update_checker.result.connect(self.on_update_check_finished)
        self.update_thread.started.connect(self.update_checker.run)
        self.update_thread.finished.connect(self.update_thread.deleteLater)
        self.update_checker.result.connect(self.update_thread.quit)
        
        self.update_thread.start()

    def on_update_check_finished(self, new_version, url):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π."""
        self.check_update_btn.setEnabled(True)
        self.check_update_btn.setText("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")

        if new_version and new_version != "error":
            reply = QMessageBox.information(
                self, 
                "üÜï –î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ", 
                f"–î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è: {new_version}\n–•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–≥—Ä—É–∑–∫–∏?",
                QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
            )
            if reply == QMessageBox.StandardButton.Yes:
                import webbrowser
                webbrowser.open(url)
        elif new_version == "error":
            QMessageBox.warning(self, "‚ö†Ô∏è –û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.")
        else:
            QMessageBox.information(self, "‚ÑπÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏—è", "–£ –≤–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è.")
        
    def export_settings(self):
        """–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–∞–π–ª."""
        # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ø–µ—Ä–µ–¥ —ç–∫—Å–ø–æ—Ä—Ç–æ–º
        if self.save_btn.isEnabled():
            reply = QMessageBox.question(
                self, 
                "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫", 
                "–£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –•–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏—Ö –ø–µ—Ä–µ–¥ —ç–∫—Å–ø–æ—Ä—Ç–æ–º?",
                QMessageBox.StandardButton.Save | QMessageBox.StandardButton.Discard | QMessageBox.StandardButton.Cancel
            )
            if reply == QMessageBox.StandardButton.Save:
                self.save_settings()
            elif reply == QMessageBox.StandardButton.Cancel:
                return

        file_path, _ = QFileDialog.getSaveFileName(
            self, 
            "üì§ –≠–∫—Å–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫", 
            "zapret_settings.json", 
            "JSON Files (*.json)"
        )
        if file_path:
            try:
                self.config_manager.export_config(file_path)
                QMessageBox.information(self, "‚úÖ –£—Å–ø–µ—Ö", f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ {file_path}")
            except Exception as e:
                QMessageBox.critical(self, "‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {e}")

    def import_settings(self):
        """–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞."""
        file_path, _ = QFileDialog.getOpenFileName(
            self, 
            "üì• –ò–º–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫", 
            "", 
            "JSON Files (*.json)"
        )
        if file_path:
            try:
                self.config_manager.import_config(file_path)
                self.load_settings()  # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º UI —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
                self.settings_changed.emit() # –£–≤–µ–¥–æ–º–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
                QMessageBox.information(self, "‚úÖ –£—Å–ø–µ—Ö", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.")
            except Exception as e:
                QMessageBox.critical(self, "‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {e}") 